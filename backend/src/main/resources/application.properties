### Environment Variables ###

## For in-memory H2 database ##
# DB_DRIVER=org.h2.Driver
# DB_PLATFORM=org.hibernate.dialect.H2Dialect

## For MariaDB database ##
# Set the following environment variables: DB_URL, DB_USERNAME, DB_PASSWORD


# port used to listen to requests
server.port=9499

# defining data source (if DB_DRIVER environment variable is not set, default MariaDB implementation is used)
spring.datasource.driver-class-name=${DB_DRIVER:org.mariadb.jdbc.Driver}

# connection details (if DB_URL environment variable is not set, default in-memory H2 implementation is used)
spring.datasource.url=${DB_URL:jdbc:h2:mem:testdb}

# database username (if DB_USERNAME environment variable is not set, default in-memory H2 implementation is used)
spring.datasource.username=${DB_USERNAME:sa}

# database password (if DB_PASSWORD environment variable is not set, default in-memory H2 implementation is used)
spring.datasource.password=${DB_PASSWORD:}

# dialect (language) wrapper (if DB_PLATFORM environment variable is not set, default MariaDB implementation is used)
spring.jpa.database-platform=${DB_PLATFORM:org.hibernate.dialect.MariaDBDialect}

# ask H2 to create / update the SQL schema at boot time (may be dangerous if used on real DB)
spring.jpa.hibernate.ddl-auto=update

# enable GUI console (similar to myPHPAdmin)
spring.h2.console.enabled=true
spring.h2.console.path=/h2

# print SQL statements
spring.jpa.properties.hibernate.format_sql=true

# rate at which a check is made to see if a DGAA exists.
fixed-delay.in.milliseconds=30000

# DGAA email (if DGAA_EMAIL environment variable is not set, default is used)
dgaa.email = ${DGAA_EMAIL:email@email.com}
# DGAA password (if DGAA_PASSWORD environment variable is not set, default is used)
dgaa.password = ${DGAA_PASSWORD:Password123!}
